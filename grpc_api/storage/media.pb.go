// Code generated by protoc-gen-go. DO NOT EDIT.
// source: media.proto

package storage

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	engine "github.com/webitel/engine/grpc_api/engine"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeleteMediaFileRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId             int64    `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteMediaFileRequest) Reset()         { *m = DeleteMediaFileRequest{} }
func (m *DeleteMediaFileRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteMediaFileRequest) ProtoMessage()    {}
func (*DeleteMediaFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07eb54b56db72a97, []int{0}
}

func (m *DeleteMediaFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteMediaFileRequest.Unmarshal(m, b)
}
func (m *DeleteMediaFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteMediaFileRequest.Marshal(b, m, deterministic)
}
func (m *DeleteMediaFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteMediaFileRequest.Merge(m, src)
}
func (m *DeleteMediaFileRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteMediaFileRequest.Size(m)
}
func (m *DeleteMediaFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteMediaFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteMediaFileRequest proto.InternalMessageInfo

func (m *DeleteMediaFileRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *DeleteMediaFileRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

type ReadMediaFileRequest struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DomainId             int64    `protobuf:"varint,2,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadMediaFileRequest) Reset()         { *m = ReadMediaFileRequest{} }
func (m *ReadMediaFileRequest) String() string { return proto.CompactTextString(m) }
func (*ReadMediaFileRequest) ProtoMessage()    {}
func (*ReadMediaFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07eb54b56db72a97, []int{1}
}

func (m *ReadMediaFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadMediaFileRequest.Unmarshal(m, b)
}
func (m *ReadMediaFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadMediaFileRequest.Marshal(b, m, deterministic)
}
func (m *ReadMediaFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadMediaFileRequest.Merge(m, src)
}
func (m *ReadMediaFileRequest) XXX_Size() int {
	return xxx_messageInfo_ReadMediaFileRequest.Size(m)
}
func (m *ReadMediaFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadMediaFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadMediaFileRequest proto.InternalMessageInfo

func (m *ReadMediaFileRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ReadMediaFileRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

type MediaFile struct {
	Id                   int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            int64          `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	CreatedBy            *engine.Lookup `protobuf:"bytes,3,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	UpdatedAt            int64          `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UpdatedBy            *engine.Lookup `protobuf:"bytes,5,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty"`
	Name                 string         `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Size                 int64          `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	MimeType             string         `protobuf:"bytes,8,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MediaFile) Reset()         { *m = MediaFile{} }
func (m *MediaFile) String() string { return proto.CompactTextString(m) }
func (*MediaFile) ProtoMessage()    {}
func (*MediaFile) Descriptor() ([]byte, []int) {
	return fileDescriptor_07eb54b56db72a97, []int{2}
}

func (m *MediaFile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MediaFile.Unmarshal(m, b)
}
func (m *MediaFile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MediaFile.Marshal(b, m, deterministic)
}
func (m *MediaFile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MediaFile.Merge(m, src)
}
func (m *MediaFile) XXX_Size() int {
	return xxx_messageInfo_MediaFile.Size(m)
}
func (m *MediaFile) XXX_DiscardUnknown() {
	xxx_messageInfo_MediaFile.DiscardUnknown(m)
}

var xxx_messageInfo_MediaFile proto.InternalMessageInfo

func (m *MediaFile) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MediaFile) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *MediaFile) GetCreatedBy() *engine.Lookup {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *MediaFile) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *MediaFile) GetUpdatedBy() *engine.Lookup {
	if m != nil {
		return m.UpdatedBy
	}
	return nil
}

func (m *MediaFile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MediaFile) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *MediaFile) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

type SearchMediaFileRequest struct {
	Page                 int32    `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size                 int32    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Q                    string   `protobuf:"bytes,3,opt,name=q,proto3" json:"q,omitempty"`
	DomainId             int64    `protobuf:"varint,4,opt,name=domain_id,json=domainId,proto3" json:"domain_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchMediaFileRequest) Reset()         { *m = SearchMediaFileRequest{} }
func (m *SearchMediaFileRequest) String() string { return proto.CompactTextString(m) }
func (*SearchMediaFileRequest) ProtoMessage()    {}
func (*SearchMediaFileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_07eb54b56db72a97, []int{3}
}

func (m *SearchMediaFileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchMediaFileRequest.Unmarshal(m, b)
}
func (m *SearchMediaFileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchMediaFileRequest.Marshal(b, m, deterministic)
}
func (m *SearchMediaFileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchMediaFileRequest.Merge(m, src)
}
func (m *SearchMediaFileRequest) XXX_Size() int {
	return xxx_messageInfo_SearchMediaFileRequest.Size(m)
}
func (m *SearchMediaFileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchMediaFileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchMediaFileRequest proto.InternalMessageInfo

func (m *SearchMediaFileRequest) GetPage() int32 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *SearchMediaFileRequest) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *SearchMediaFileRequest) GetQ() string {
	if m != nil {
		return m.Q
	}
	return ""
}

func (m *SearchMediaFileRequest) GetDomainId() int64 {
	if m != nil {
		return m.DomainId
	}
	return 0
}

type ListMedia struct {
	Next                 bool         `protobuf:"varint,1,opt,name=next,proto3" json:"next,omitempty"`
	Items                []*MediaFile `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListMedia) Reset()         { *m = ListMedia{} }
func (m *ListMedia) String() string { return proto.CompactTextString(m) }
func (*ListMedia) ProtoMessage()    {}
func (*ListMedia) Descriptor() ([]byte, []int) {
	return fileDescriptor_07eb54b56db72a97, []int{4}
}

func (m *ListMedia) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMedia.Unmarshal(m, b)
}
func (m *ListMedia) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMedia.Marshal(b, m, deterministic)
}
func (m *ListMedia) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMedia.Merge(m, src)
}
func (m *ListMedia) XXX_Size() int {
	return xxx_messageInfo_ListMedia.Size(m)
}
func (m *ListMedia) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMedia.DiscardUnknown(m)
}

var xxx_messageInfo_ListMedia proto.InternalMessageInfo

func (m *ListMedia) GetNext() bool {
	if m != nil {
		return m.Next
	}
	return false
}

func (m *ListMedia) GetItems() []*MediaFile {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*DeleteMediaFileRequest)(nil), "storage.DeleteMediaFileRequest")
	proto.RegisterType((*ReadMediaFileRequest)(nil), "storage.ReadMediaFileRequest")
	proto.RegisterType((*MediaFile)(nil), "storage.MediaFile")
	proto.RegisterType((*SearchMediaFileRequest)(nil), "storage.SearchMediaFileRequest")
	proto.RegisterType((*ListMedia)(nil), "storage.ListMedia")
}

func init() { proto.RegisterFile("media.proto", fileDescriptor_07eb54b56db72a97) }

var fileDescriptor_07eb54b56db72a97 = []byte{
	// 489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x93, 0x4d, 0x6e, 0xd3, 0x50,
	0x10, 0xc7, 0x65, 0x27, 0x69, 0xe3, 0x09, 0xa4, 0xd5, 0x03, 0x22, 0x2b, 0xa5, 0x22, 0xca, 0xca,
	0x02, 0xd5, 0x96, 0xc2, 0x09, 0x08, 0x1f, 0x52, 0xa5, 0xb2, 0x71, 0x59, 0xb1, 0xc0, 0x7a, 0xf6,
	0x1b, 0xb9, 0xa3, 0xc6, 0x7e, 0x8e, 0xfd, 0x02, 0x18, 0xc4, 0x86, 0x2b, 0x70, 0x19, 0xee, 0xc1,
	0x15, 0x38, 0x06, 0x0b, 0xe4, 0x67, 0xd7, 0x21, 0xa9, 0xc5, 0xa6, 0xbb, 0xd1, 0x7f, 0x66, 0x7e,
	0xf3, 0xa1, 0x19, 0x18, 0x25, 0x28, 0x88, 0xbb, 0x59, 0x2e, 0x95, 0x64, 0x87, 0x85, 0x92, 0x39,
	0x8f, 0x71, 0xca, 0x30, 0x8d, 0x29, 0x45, 0x2f, 0x92, 0x69, 0xa1, 0x6a, 0xe7, 0xf4, 0x71, 0x2c,
	0x65, 0xbc, 0x42, 0x8f, 0x67, 0xe4, 0xf1, 0x34, 0x95, 0x8a, 0x2b, 0x92, 0x69, 0x51, 0x7b, 0xe7,
	0xaf, 0x61, 0xf2, 0x0a, 0x57, 0xa8, 0xf0, 0x6d, 0xc5, 0x7b, 0x43, 0x2b, 0xf4, 0x71, 0xbd, 0xc1,
	0x42, 0xb1, 0x31, 0x98, 0x24, 0x6c, 0x63, 0x66, 0x38, 0x3d, 0xdf, 0x24, 0xc1, 0x4e, 0xc0, 0x12,
	0x32, 0xe1, 0x94, 0x06, 0x24, 0x6c, 0x53, 0xcb, 0xc3, 0x5a, 0x38, 0x17, 0xf3, 0x97, 0xf0, 0xd0,
	0x47, 0x2e, 0xee, 0x06, 0xf9, 0x63, 0x80, 0xd5, 0x12, 0x6e, 0xa5, 0x9e, 0x02, 0x44, 0x39, 0x72,
	0x85, 0x22, 0xe0, 0xaa, 0xc9, 0xb5, 0x1a, 0xe5, 0x85, 0x62, 0x67, 0x5b, 0x77, 0x58, 0xda, 0xbd,
	0x99, 0xe1, 0x8c, 0x16, 0x63, 0xb7, 0xde, 0x87, 0x7b, 0x21, 0xe5, 0xf5, 0x26, 0x6b, 0xc3, 0x97,
	0x65, 0x45, 0xdb, 0x64, 0xe2, 0x86, 0xd6, 0xaf, 0x69, 0x8d, 0x52, 0xd3, 0x6e, 0xdc, 0x61, 0x69,
	0x0f, 0xba, 0x69, 0x4d, 0xc4, 0xb2, 0x64, 0x0c, 0xfa, 0x29, 0x4f, 0xd0, 0x3e, 0x98, 0x19, 0x8e,
	0xe5, 0x6b, 0xbb, 0xd2, 0x0a, 0xfa, 0x82, 0xf6, 0xa1, 0x66, 0x6b, 0xbb, 0x1a, 0x3f, 0xa1, 0x04,
	0x03, 0x55, 0x66, 0x68, 0x0f, 0x75, 0xf0, 0xb0, 0x12, 0xde, 0x95, 0x19, 0xce, 0xaf, 0x61, 0x72,
	0x89, 0x3c, 0x8f, 0xae, 0x6e, 0x6d, 0x91, 0x41, 0x3f, 0xe3, 0x31, 0xea, 0x65, 0x0c, 0x7c, 0x6d,
	0xb7, 0x78, 0xb3, 0xd6, 0x34, 0xfe, 0x1e, 0x18, 0x6b, 0x3d, 0xba, 0xe5, 0x1b, 0xeb, 0xdd, 0x5d,
	0xf7, 0xf7, 0x76, 0x7d, 0x0e, 0xd6, 0x05, 0x15, 0x4a, 0x97, 0xd2, 0xed, 0xe3, 0x67, 0xa5, 0xf9,
	0x43, 0x5f, 0xdb, 0xcc, 0x81, 0x01, 0x29, 0x4c, 0x0a, 0xdb, 0x9c, 0xf5, 0x9c, 0xd1, 0x82, 0xb9,
	0xcd, 0x8d, 0xb9, 0xdb, 0xee, 0xea, 0x80, 0xc5, 0x4f, 0x13, 0x8e, 0x5b, 0xf1, 0x12, 0xf3, 0x8f,
	0x14, 0x21, 0xfb, 0x00, 0x47, 0x7b, 0xc3, 0xb0, 0x27, 0x2d, 0xa2, 0x7b, 0xcc, 0xe9, 0xb6, 0x46,
	0xdb, 0xda, 0x7c, 0xf2, 0xfd, 0xd7, 0xef, 0x1f, 0xe6, 0x31, 0x1b, 0x7b, 0x8d, 0xcf, 0xd3, 0x87,
	0xcf, 0x02, 0xb8, 0xbf, 0x73, 0x70, 0xec, 0xb4, 0x4d, 0xee, 0x3a, 0xc4, 0x69, 0x47, 0xff, 0xf3,
	0x13, 0xcd, 0x7e, 0xc4, 0x1e, 0xec, 0xb2, 0xbd, 0xaf, 0x24, 0xbe, 0xb1, 0x08, 0x8e, 0xf6, 0x1e,
	0xe3, 0x9f, 0x01, 0xba, 0x5f, 0xe6, 0x7f, 0x45, 0x9e, 0x76, 0x15, 0x59, 0x9e, 0xbd, 0x7f, 0x16,
	0x93, 0xba, 0xda, 0x84, 0x6e, 0x24, 0x13, 0xef, 0x13, 0x86, 0xa4, 0x70, 0xd5, 0x06, 0xc6, 0x79,
	0x16, 0x05, 0xd5, 0xdb, 0x36, 0x42, 0x78, 0xa0, 0x7f, 0xf6, 0xf9, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x75, 0xd9, 0xbb, 0xb0, 0xfd, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MediaFileServiceClient is the client API for MediaFileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MediaFileServiceClient interface {
	// Search MediaFile
	SearchMediaFile(ctx context.Context, in *SearchMediaFileRequest, opts ...grpc.CallOption) (*ListMedia, error)
	// MediaFile item
	ReadMediaFile(ctx context.Context, in *ReadMediaFileRequest, opts ...grpc.CallOption) (*MediaFile, error)
	// Remove MediaFile
	DeleteMediaFile(ctx context.Context, in *DeleteMediaFileRequest, opts ...grpc.CallOption) (*MediaFile, error)
}

type mediaFileServiceClient struct {
	cc *grpc.ClientConn
}

func NewMediaFileServiceClient(cc *grpc.ClientConn) MediaFileServiceClient {
	return &mediaFileServiceClient{cc}
}

func (c *mediaFileServiceClient) SearchMediaFile(ctx context.Context, in *SearchMediaFileRequest, opts ...grpc.CallOption) (*ListMedia, error) {
	out := new(ListMedia)
	err := c.cc.Invoke(ctx, "/storage.MediaFileService/SearchMediaFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mediaFileServiceClient) ReadMediaFile(ctx context.Context, in *ReadMediaFileRequest, opts ...grpc.CallOption) (*MediaFile, error) {
	out := new(MediaFile)
	err := c.cc.Invoke(ctx, "/storage.MediaFileService/ReadMediaFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mediaFileServiceClient) DeleteMediaFile(ctx context.Context, in *DeleteMediaFileRequest, opts ...grpc.CallOption) (*MediaFile, error) {
	out := new(MediaFile)
	err := c.cc.Invoke(ctx, "/storage.MediaFileService/DeleteMediaFile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MediaFileServiceServer is the server API for MediaFileService service.
type MediaFileServiceServer interface {
	// Search MediaFile
	SearchMediaFile(context.Context, *SearchMediaFileRequest) (*ListMedia, error)
	// MediaFile item
	ReadMediaFile(context.Context, *ReadMediaFileRequest) (*MediaFile, error)
	// Remove MediaFile
	DeleteMediaFile(context.Context, *DeleteMediaFileRequest) (*MediaFile, error)
}

// UnimplementedMediaFileServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMediaFileServiceServer struct {
}

func (*UnimplementedMediaFileServiceServer) SearchMediaFile(ctx context.Context, req *SearchMediaFileRequest) (*ListMedia, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchMediaFile not implemented")
}
func (*UnimplementedMediaFileServiceServer) ReadMediaFile(ctx context.Context, req *ReadMediaFileRequest) (*MediaFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReadMediaFile not implemented")
}
func (*UnimplementedMediaFileServiceServer) DeleteMediaFile(ctx context.Context, req *DeleteMediaFileRequest) (*MediaFile, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMediaFile not implemented")
}

func RegisterMediaFileServiceServer(s *grpc.Server, srv MediaFileServiceServer) {
	s.RegisterService(&_MediaFileService_serviceDesc, srv)
}

func _MediaFileService_SearchMediaFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchMediaFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaFileServiceServer).SearchMediaFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.MediaFileService/SearchMediaFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaFileServiceServer).SearchMediaFile(ctx, req.(*SearchMediaFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MediaFileService_ReadMediaFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadMediaFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaFileServiceServer).ReadMediaFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.MediaFileService/ReadMediaFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaFileServiceServer).ReadMediaFile(ctx, req.(*ReadMediaFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MediaFileService_DeleteMediaFile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMediaFileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MediaFileServiceServer).DeleteMediaFile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.MediaFileService/DeleteMediaFile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MediaFileServiceServer).DeleteMediaFile(ctx, req.(*DeleteMediaFileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MediaFileService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storage.MediaFileService",
	HandlerType: (*MediaFileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SearchMediaFile",
			Handler:    _MediaFileService_SearchMediaFile_Handler,
		},
		{
			MethodName: "ReadMediaFile",
			Handler:    _MediaFileService_ReadMediaFile_Handler,
		},
		{
			MethodName: "DeleteMediaFile",
			Handler:    _MediaFileService_DeleteMediaFile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "media.proto",
}
